import fs from 'fs';
import { parse } from './parseInterface';
export const getDirentTree = (input) => {
    const tree = { path: input, children: [] };
    fs.readdirSync(input, { withFileTypes: true })
        .filter(dirent => !dirent.name.startsWith('$') && !dirent.name.startsWith('@'))
        .sort((a, b) => (a.name < b.name ? -1 : 1))
        .forEach(dirent => {
        if (dirent.isDirectory()) {
            tree.children.push({
                name: dirent.name,
                isDir: true,
                tree: getDirentTree(`${input}/${dirent.name}`),
            });
        }
        else if (dirent.name.endsWith('.ts')) {
            const value = parse(fs.readFileSync(`${input}/${dirent.name}`, 'utf8'), 'Methods');
            if (!(value === null || value === void 0 ? void 0 : value.methods.some(({ props }) => Object.keys(props).length)))
                return;
            tree.children.push({
                name: dirent.name,
                isDir: false,
                ...value,
            });
        }
    });
    return tree;
};
//# sourceMappingURL=getDirentTree.js.map