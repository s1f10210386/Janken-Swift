"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDirentTree = void 0;
const fs_1 = __importDefault(require("fs"));
const parseInterface_1 = require("./parseInterface");
const getDirentTree = (input) => {
    const tree = { path: input, children: [] };
    fs_1.default.readdirSync(input, { withFileTypes: true })
        .filter(dirent => !dirent.name.startsWith('$') && !dirent.name.startsWith('@'))
        .sort((a, b) => (a.name < b.name ? -1 : 1))
        .forEach(dirent => {
        if (dirent.isDirectory()) {
            tree.children.push({
                name: dirent.name,
                isDir: true,
                tree: (0, exports.getDirentTree)(`${input}/${dirent.name}`),
            });
        }
        else if (dirent.name.endsWith('.ts')) {
            const value = (0, parseInterface_1.parse)(fs_1.default.readFileSync(`${input}/${dirent.name}`, 'utf8'), 'Methods');
            if (!(value === null || value === void 0 ? void 0 : value.methods.some(({ props }) => Object.keys(props).length)))
                return;
            tree.children.push({
                name: dirent.name,
                isDir: false,
                ...value,
            });
        }
    });
    return tree;
};
exports.getDirentTree = getDirentTree;
//# sourceMappingURL=getDirentTree.js.map