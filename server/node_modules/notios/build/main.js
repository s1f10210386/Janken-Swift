var Ko=Object.create;var Oe=Object.defineProperty,Wo=Object.defineProperties,zo=Object.getOwnPropertyDescriptor,jo=Object.getOwnPropertyDescriptors,Ho=Object.getOwnPropertyNames,De=Object.getOwnPropertySymbols,Go=Object.getPrototypeOf,tt=Object.prototype.hasOwnProperty,Pt=Object.prototype.propertyIsEnumerable;var kt=Math.pow,St=(e,t,n)=>t in e?Oe(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,h=(e,t)=>{for(var n in t||(t={}))tt.call(t,n)&&St(e,n,t[n]);if(De)for(var n of De(t))Pt.call(t,n)&&St(e,n,t[n]);return e},T=(e,t)=>Wo(e,jo(t)),qo=e=>Oe(e,"__esModule",{value:!0}),o=(e,t)=>Oe(e,"name",{value:t,configurable:!0});var Te=(e,t)=>{var n={};for(var r in e)tt.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&De)for(var r of De(e))t.indexOf(r)<0&&Pt.call(e,r)&&(n[r]=e[r]);return n};var Jo=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Yo=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Ho(t))!tt.call(e,s)&&(n||s!=="default")&&Oe(e,s,{get:()=>t[s],enumerable:!(r=zo(t,s))||r.enumerable});return e},v=(e,t)=>Yo(qo(Oe(e!=null?Ko(Go(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var Lt=Jo((bn,Xo)=>{Xo.exports={name:"notios",version:"0.4.1",description:"",keywords:["notios","npm","npm-scripts","ui","TUI"],license:"MIT",author:"Frourio Inc.",main:"index.js",bin:{"n-npm-run-all":"./bin/npm-run-all","n-run-p":"./bin/run-p","n-run-s":"./bin/run-s",notios:"./bin/notios","npm-run-all":"./bin/npm-run-all","run-p":"./bin/run-p","run-s":"./bin/run-s"},scripts:{build:"run-p build:*","build:libs":'pnpm run "--filter=./libs/*" build',"build:notios":"ts-node -T ./scripts/build.ts --from-dir ./src/entrypoints --to-dir ./build --clean --target es2015",typecheck:"run-p typecheck:*","typecheck:notios":"tsc --noEmit","typecheck:libs":'pnpm run "--filter=./libs/*" typecheck',dev:"run-p dev:*","dev:libs":'pnpm run "--filter=./libs/*" build-dev',"dev:notios":"pnpm run build:notios --watch",test:"run-p test:*","test:libs":"pnpm run --filter=./libs test",lint:'eslint --ext .ts,.js,.tsx . && prettier --check "./**/*.{js,ts,tsx}"',"lint:fix":'eslint --ext .ts,.js,.tsx . --fix && prettier --check "./**/*.{js,ts,tsx}" --write'},dependencies:{commander:"^9.0.0","cross-spawn":"7.0.3",ink:"3.2.0","ink-divider":"3.0.0","node-ipc":"10.1.0","npm-run-all":"4.1.5",pidtree:"^0.5.0",react:"^18.2.0","source-map-support":"^0.5.21","string-length":"^5.0.1",wcwidth:"^1.0.1","xdg-portable":"9.4.0"},devDependencies:{"@changesets/changelog-github":"^0.4.3","@changesets/cli":"^2.21.1","@types/cross-spawn":"^6.0.2","@types/node":"^17.0.21","@types/node-ipc":"^9.2.0","@types/react":"^18.2.12","@types/source-map-support":"^0.5.4","@types/wcwidth":"^1.0.0","@typescript-eslint/eslint-plugin":"^5.16.0","@typescript-eslint/parser":"^5.16.0","ansi-parser":"workspace:*",arg:"^5.0.1","better-typescript-lib":"^2.0.0",c8:"^7.11.0",esbuild:"^0.14.25","esbuild-node-externals":"^1.4.1",eslint:"^8.11.0","eslint-config-prettier":"^8.5.0","eslint-import-resolver-node":"^0.3.6","eslint-import-resolver-typescript":"^2.7.0","eslint-plugin-import":"^2.25.4","eslint-plugin-react":"^7.29.4","eslint-plugin-react-hooks":"^4.3.0","ink-testing-library":"^2.1.0",prettier:"^2.6.0","prettier-plugin-organize-imports":"^2.3.4","ts-node":"^10.7.0",typescript:"~4.6",vitest:"^0.6.0"}}});var Do=v(require("source-map-support"));var re=require("commander"),Ot=v(require("fs")),Be=v(require("path")),Bt=v(require("xdg-portable"));var we=v(require("fs")),Fe=v(require("path")),vt=o(e=>{try{return we.default.accessSync(e,we.default.constants.X_OK),!0}catch(t){return!1}},"executable"),Zo=o(({cwd:e})=>we.default.existsSync(Fe.default.resolve(e,"package-lock.json"))?"npm":vt("yarn")&&we.default.existsSync(Fe.default.resolve(e,"yarn.lock"))?"yarn":vt("pnpm")&&we.default.existsSync(Fe.default.resolve(e,"pnpm-lock.yaml"))?"pnpm":"npm","detectNpmClient"),Ke=Zo;var ot=Symbol("error hint"),pe=o((e,t)=>{try{return e()}catch(n){throw Object.assign(n,{[ot]:t})}},"tryWithHint"),Ut=o(e=>{try{e()}catch(t){if(t instanceof Error&&ot in t){let n=t[ot];console.error(t),console.error("[NOTIOS ERROR HINT] %s",n)}else console.error(t);process.exit(1)}},"catchWithHint");var It=o(()=>{let e=Be.default.resolve(Bt.default.config(),"notios","notios.config.cjs");re.program.option("--manifest <string>","package.json path","package.json"),re.program.option("--no-color","force to suppress coloring"),re.program.option("--config <string>","notios config file location",e),re.program.name("notios"),re.program.argument("[run-script-name...]"),re.program.version(Lt().version,"-v, --version"),re.program.parse();let t=re.program.args,n=re.program.opts(),r=!n.color,s=Be.default.resolve(process.cwd(),n.manifest),c=Be.default.relative(process.cwd(),s),a=Be.default.resolve(process.cwd(),n.config),b=pe(()=>Ot.default.readFileSync(s).toString(),`Failed to read file ${JSON.stringify(s)}.
Please check existense of file and access permissions.`),y=pe(()=>JSON.parse(b),`Failed to parse file ${JSON.stringify(s)} as json.`),A=pe(()=>Object.entries(y.scripts).map(([u,d])=>{if(typeof d!="string")throw new TypeError("command is not string");return{name:u,command:d}}),`Manifest json ${JSON.stringify(s)} does not have scripts section correctly.
Please check the npm documentation for more information: https://docs.npmjs.com/misc/scripts/`);return t.forEach(u=>{pe(()=>{if(!(u in y.scripts))throw new Error("no such script")},`Manifest json ${JSON.stringify(s)} does not have such script: ${JSON.stringify(u)}`)}),{forceNoColor:r,manifestFullPath:s,manifestRelativePath:c,initialScriptNames:t,scripts:A,npmClient:Ke({cwd:process.cwd()}),configFileFullPath:a}},"setupArgs");var Qo=o(e=>{switch(e){case"black":return 0;case"red":return 1;case"green":return 2;case"yellow":return 3;case"blue":return 4;case"magenta":return 5;case"cyan":return 6;case"white":return 7}},"colorIndexOf"),ne=Qo;var Ro=o(()=>({actionType:"controll",char:"\0",byte:0,symbol:"NUL"}),"ansiActionControll00"),er=o(()=>({actionType:"controll",char:"",byte:1,symbol:"SOH"}),"ansiActionControll01"),tr=o(()=>({actionType:"controll",char:"",byte:2,symbol:"STX"}),"ansiActionControll02"),or=o(()=>({actionType:"controll",char:"",byte:3,symbol:"ETX"}),"ansiActionControll03"),rr=o(()=>({actionType:"controll",char:"",byte:4,symbol:"EOT"}),"ansiActionControll04"),nr=o(()=>({actionType:"controll",char:"",byte:5,symbol:"ENQ"}),"ansiActionControll05"),ir=o(()=>({actionType:"controll",char:"",byte:6,symbol:"ACK"}),"ansiActionControll06"),sr=o(()=>({actionType:"controll",char:"\x07",byte:7,symbol:"BEL"}),"ansiActionControll07"),cr=o(()=>({actionType:"controll",char:"\b",byte:8,symbol:"BS"}),"ansiActionControll08"),ar=o(()=>({actionType:"controll",char:"	",byte:9,symbol:"HT"}),"ansiActionControll09"),lr=o(()=>({actionType:"controll",char:`
`,byte:10,symbol:"LF"}),"ansiActionControll0a"),pr=o(()=>({actionType:"controll",char:"\v",byte:11,symbol:"VT"}),"ansiActionControll0b"),ur=o(()=>({actionType:"controll",char:"\f",byte:12,symbol:"FF"}),"ansiActionControll0c"),dr=o(()=>({actionType:"controll",char:"\r",byte:13,symbol:"CR"}),"ansiActionControll0d"),mr=o(()=>({actionType:"controll",char:"",byte:14,symbol:"SO"}),"ansiActionControll0e"),fr=o(()=>({actionType:"controll",char:"",byte:15,symbol:"SI"}),"ansiActionControll0f"),yr=o(()=>({actionType:"controll",char:"",byte:16,symbol:"DLE"}),"ansiActionControll10"),gr=o(()=>({actionType:"controll",char:"",byte:17,symbol:"DC1"}),"ansiActionControll11"),hr=o(()=>({actionType:"controll",char:"",byte:18,symbol:"DC2"}),"ansiActionControll12"),xr=o(()=>({actionType:"controll",char:"",byte:19,symbol:"DC3"}),"ansiActionControll13"),Ar=o(()=>({actionType:"controll",char:"",byte:20,symbol:"DC4"}),"ansiActionControll14"),br=o(()=>({actionType:"controll",char:"",byte:21,symbol:"NAK"}),"ansiActionControll15"),Cr=o(()=>({actionType:"controll",char:"",byte:22,symbol:"SYN"}),"ansiActionControll16"),Tr=o(()=>({actionType:"controll",char:"",byte:23,symbol:"ETB"}),"ansiActionControll17"),wr=o(()=>({actionType:"controll",char:"",byte:24,symbol:"CAN"}),"ansiActionControll18"),Nr=o(()=>({actionType:"controll",char:"",byte:25,symbol:"EM"}),"ansiActionControll19"),Sr=o(()=>({actionType:"controll",char:"",byte:26,symbol:"SUB"}),"ansiActionControll1a"),Pr=o(()=>({actionType:"controll",char:"\x1B",byte:27,symbol:"ESC"}),"ansiActionControll1b"),kr=o(()=>({actionType:"controll",char:"",byte:28,symbol:"FS"}),"ansiActionControll1c"),vr=o(()=>({actionType:"controll",char:"",byte:29,symbol:"GS"}),"ansiActionControll1d"),Ur=o(()=>({actionType:"controll",char:"",byte:30,symbol:"RS"}),"ansiActionControll1e"),Lr=o(()=>({actionType:"controll",char:"",byte:31,symbol:"US"}),"ansiActionControll1f"),$t=o(()=>[Ro(),er(),tr(),or(),rr(),nr(),ir(),sr(),cr(),ar(),lr(),pr(),ur(),dr(),mr(),fr(),yr(),gr(),hr(),xr(),Ar(),br(),Cr(),Tr(),wr(),Nr(),Sr(),Pr(),kr(),vr(),Ur(),Lr()],"ansiActionControllList");var Or=o(e=>{if(e<16)switch(e){case 0:return{colorType:"8bit",color8bitType:"standard",colorName:"black"};case 1:return{colorType:"8bit",color8bitType:"standard",colorName:"red"};case 2:return{colorType:"8bit",color8bitType:"standard",colorName:"green"};case 3:return{colorType:"8bit",color8bitType:"standard",colorName:"yellow"};case 4:return{colorType:"8bit",color8bitType:"standard",colorName:"blue"};case 5:return{colorType:"8bit",color8bitType:"standard",colorName:"magenta"};case 6:return{colorType:"8bit",color8bitType:"standard",colorName:"cyan"};case 7:return{colorType:"8bit",color8bitType:"standard",colorName:"white"};case 8:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"black"};case 9:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"red"};case 10:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"green"};case 11:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"yellow"};case 12:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"blue"};case 13:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"magenta"};case 14:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"cyan"};case 15:default:return{colorType:"8bit",color8bitType:"high_intensity",colorName:"white"}}else if(e<232){let t=(e-16)%6,n=Math.floor((e-16)/6)%6,r=Math.floor((e-16)/36);return{colorType:"8bit",color8bitType:"rgb",r,g:n,b:t}}else return{colorType:"8bit",color8bitType:"grayscale",lightness:e-232}},"decodeAnsiColor8bit"),We=Or;var i=o(()=>({waitingBytes:Uint8Array.from([])}),"defaultAnsiParser"),rt=i;var ze=o(e=>e.length<3?!0:e.length>3?!1:e<"256","lessThan256"),Ie=o(e=>48<=e&&e<=57?e-48:null,"decodeNumberByte"),$e=o(e=>{let t=0;for(;t<e.length&&e[t]===48;)t+=1;return e.length>=1&&e.length<=t?"0":(e=e.slice(t),e.map(n=>`${n-48}`).join(""))},"decodeIntegerBytes"),Br=o((e,t)=>{let n=Array.from(e.waitingBytes);n.push(t);let r=Array.from(e.waitingBytes),s=n[n.length-1];if(t<=255&&r.push(t),n[0]!==27)return n[0]<32?[i(),$t()[n[0]]]:[i(),{actionType:"print",byte:n[0]}];if(n.length<=1)return[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n[1]!==91)return 48<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];let c=2;for(;n.length>c&&Ie(n[c])!==null;)c+=1;let a=$e(n.slice(2,c));if(n.length<=c)return 3<=n.length&&64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];switch(n[c]){case 65:return[i(),{actionType:"cuu",cells:a}];case 66:return[i(),{actionType:"cud",cells:a}];case 67:return[i(),{actionType:"cuf",cells:a}];case 68:return[i(),{actionType:"cub",cells:a}];case 69:return[i(),{actionType:"cnl",cells:a}];case 70:return[i(),{actionType:"cpl",cells:a}];case 71:return[i(),{actionType:"cha",column:a}];case 72:return[i(),{actionType:"cup",row:a,column:null}];case 74:switch(a){case"":case"0":case"1":case"2":case"3":return[i(),{actionType:"ed",eraseInDisplayType:a}];default:return[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]}case 75:switch(a){case"":case"0":case"1":case"2":return[i(),{actionType:"el",eraseInLineType:a}];default:return[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]}case 83:return[i(),{actionType:"su",n:a}];case 84:return[i(),{actionType:"sd",n:a}];case 105:switch(a){case"4":return[i(),{actionType:"aux_port",auxPort:!1}];case"5":return[i(),{actionType:"aux_port",auxPort:!0}];default:return[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]}case 102:return[i(),{actionType:"hvp",horizontal:a,vertical:null}];case 109:switch(a){case"":case"0":return[i(),{actionType:"reset"}];case"1":return[i(),{actionType:"intensity",intensity:"bold"}];case"2":return[i(),{actionType:"intensity",intensity:"dim"}];case"3":return[i(),{actionType:"italic",italic:!0}];case"4":return[i(),{actionType:"underline",underline:"single"}];case"5":return[i(),{actionType:"blink",blink:"slow"}];case"6":return[i(),{actionType:"blink",blink:"rapid"}];case"7":return[i(),{actionType:"invert",invert:!0}];case"8":return[i(),{actionType:"hide",hide:!0}];case"9":return[i(),{actionType:"strike",strike:!0}];case"10":return[i(),{actionType:"font",font:"default"}];case"11":return[i(),{actionType:"font",font:1}];case"12":return[i(),{actionType:"font",font:2}];case"13":return[i(),{actionType:"font",font:3}];case"14":return[i(),{actionType:"font",font:4}];case"15":return[i(),{actionType:"font",font:5}];case"16":return[i(),{actionType:"font",font:6}];case"17":return[i(),{actionType:"font",font:7}];case"18":return[i(),{actionType:"font",font:8}];case"19":return[i(),{actionType:"font",font:9}];case"20":return[i(),{actionType:"font",font:"fraktur"}];case"21":return[i(),{actionType:"underline",underline:"double"}];case"22":return[i(),{actionType:"intensity",intensity:"normal"}];case"23":return[i(),{actionType:"italic",italic:!1}];case"24":return[i(),{actionType:"underline",underline:"none"}];case"25":return[i(),{actionType:"blink",blink:"off"}];case"26":return[i(),{actionType:"propositional_spacing",propositionalSpacing:!0}];case"27":return[i(),{actionType:"invert",invert:!1}];case"28":return[i(),{actionType:"hide",hide:!1}];case"29":return[i(),{actionType:"strike",strike:!1}];case"30":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"black"}}];case"31":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"red"}}];case"32":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"green"}}];case"33":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"yellow"}}];case"34":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"blue"}}];case"35":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"magenta"}}];case"36":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"cyan"}}];case"37":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"standard",colorName:"white"}}];case"38":break;case"39":return[i(),{actionType:"fg_color",fgColor:{colorType:"default"}}];case"40":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"black"}}];case"41":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"red"}}];case"42":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"green"}}];case"43":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"yellow"}}];case"44":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"blue"}}];case"45":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"magenta"}}];case"46":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"cyan"}}];case"47":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"standard",colorName:"white"}}];case"48":break;case"49":return[i(),{actionType:"bg_color",bgColor:{colorType:"default"}}];case"50":return[i(),{actionType:"propositional_spacing",propositionalSpacing:!1}];case"51":return[i(),{actionType:"emoji_variation",emojiVariation:"framed"}];case"52":return[i(),{actionType:"emoji_variation",emojiVariation:"encircled"}];case"53":return[i(),{actionType:"overlined",overlined:!0}];case"54":return[i(),{actionType:"emoji_variation",emojiVariation:"default"}];case"55":return[i(),{actionType:"overlined",overlined:!1}];case"73":return[i(),{actionType:"script",script:"superscript"}];case"74":return[i(),{actionType:"script",script:"subscript"}];case"75":return[i(),{actionType:"script",script:"default"}];case"90":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"black"}}];case"91":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"red"}}];case"92":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"green"}}];case"93":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"yellow"}}];case"94":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"blue"}}];case"95":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"magenta"}}];case"96":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"cyan"}}];case"97":return[i(),{actionType:"fg_color",fgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"white"}}];case"100":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"black"}}];case"101":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"red"}}];case"102":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"green"}}];case"103":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"yellow"}}];case"104":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"blue"}}];case"105":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"magenta"}}];case"106":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"cyan"}}];case"107":return[i(),{actionType:"bg_color",bgColor:{colorType:"4bit",color4bitType:"high_intensity",colorName:"white"}}]}break;case 110:switch(a){case"6":return[i(),{actionType:"dsr"}];default:return[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]}}if(n.length<=c)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n[c]!==59)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];c+=1;let b=c;for(;n.length>c&&Ie(n[c])!==null;)c+=1;let y=$e(n.slice(b,c));if(n.length<=c)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];switch(n[c]){case 72:return[i(),{actionType:"cup",row:a,column:y}];case 102:return[i(),{actionType:"hvp",horizontal:a,vertical:y}]}if(n.length<=c)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n[c]!==59)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];c+=1;let A=c;for(;n.length>c&&Ie(n[c])!==null;)c+=1;let u=$e(n.slice(A,c));if(n.length<=c)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n[c]===109){if(a!=="38"&&a!=="48"||y!=="5"||u===""||!ze(u))return[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}];let P=Number.parseInt(u,10);return a==="38"?[i(),{actionType:"fg_color",fgColor:We(P)}]:[i(),{actionType:"bg_color",bgColor:We(P)}]}if(n.length<=c)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n[c]!==59)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];c+=1;let d=c;for(;n.length>c&&Ie(n[c])!==null;)c+=1;let C=$e(n.slice(d,c));if(n.length<=c)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n.length<=c)return[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];if(n[c]!==59)return 64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}];c+=1;let g=c;for(;n.length>c&&Ie(n[c])!==null;)c+=1;let N=$e(n.slice(g,c));return n.length<=c?[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}]:n[c]===109?a!=="38"&&a!=="48"||y!=="2"||u===""||C===""||N===""||!ze(u)||!ze(C)||!ze(N)?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:a==="38"?[i(),{actionType:"fg_color",fgColor:{colorType:"24bit",r:Number.parseInt(u,10),g:Number.parseInt(C,10),b:Number.parseInt(N,10)}}]:[i(),{actionType:"bg_color",bgColor:{colorType:"24bit",r:Number.parseInt(u,10),g:Number.parseInt(C,10),b:Number.parseInt(N,10)}}]:64<=s&&s<=126?[i(),{actionType:"unknown",unknownBytes:Uint8Array.from(r)}]:[{waitingBytes:Uint8Array.from(r)},{actionType:"noop"}]},"decodeAnsiByte"),je=Br;var Ir=o((e,t)=>{let n=e,r=[...t].map(s=>{let[c,a]=je(n,s);return n=c,a}).filter(s=>s.actionType!=="noop");return[n,r]},"decodeAnsiBytes"),nt=Ir;var U=o(e=>Uint8Array.from([...e].map(t=>t.charCodeAt(0))),"encodeInteger"),$r=o(e=>{let t=[27,91];switch(e.actionType){case"noop":return Uint8Array.from([]);case"unknown":return e.unknownBytes;case"print":return Uint8Array.from([e.byte]);case"cuu":return Uint8Array.from([...t,...U(e.cells),65]);case"cud":return Uint8Array.from([...t,...U(e.cells),66]);case"cuf":return Uint8Array.from([...t,...U(e.cells),67]);case"cub":return Uint8Array.from([...t,...U(e.cells),68]);case"cnl":return Uint8Array.from([...t,...U(e.cells),69]);case"cpl":return Uint8Array.from([...t,...U(e.cells),70]);case"cha":return Uint8Array.from([...t,...U(e.column),71]);case"cup":return e.column===null?Uint8Array.from([...t,...U(e.row),72]):Uint8Array.from([...t,...U(e.row),59,...U(e.column),72]);case"ed":return Uint8Array.from([...t,...U(e.eraseInDisplayType),74]);case"el":return Uint8Array.from([...t,...U(e.eraseInLineType),75]);case"su":return Uint8Array.from([...t,...U(e.n),83]);case"sd":return Uint8Array.from([...t,...U(e.n),84]);case"aux_port":return Uint8Array.from([...t,e.auxPort?53:52,105]);case"hvp":return e.vertical===null?Uint8Array.from([...t,...U(e.horizontal),102]):Uint8Array.from([...t,...U(e.horizontal),59,...U(e.vertical),102]);case"dsr":return Uint8Array.from([...t,54,110]);case"reset":return Uint8Array.from([...t,48,109]);case"intensity":switch(e.intensity){case"bold":return Uint8Array.from([...t,49,109]);case"dim":return Uint8Array.from([...t,50,109]);default:return Uint8Array.from([...t,50,50,109])}case"italic":return e.italic?Uint8Array.from([...t,51,109]):Uint8Array.from([...t,50,51,109]);case"underline":switch(e.underline){case"single":return Uint8Array.from([...t,52,109]);case"double":return Uint8Array.from([...t,50,49,109]);default:return Uint8Array.from([...t,50,52,109])}case"blink":switch(e.blink){case"slow":return Uint8Array.from([...t,53,109]);case"rapid":return Uint8Array.from([...t,54,109]);default:return Uint8Array.from([...t,50,53,109])}case"invert":return e.invert?Uint8Array.from([...t,55,109]):Uint8Array.from([...t,50,55,109]);case"hide":return e.hide?Uint8Array.from([...t,56,109]):Uint8Array.from([...t,50,56,109]);case"strike":return e.strike?Uint8Array.from([...t,57,109]):Uint8Array.from([...t,50,57,109]);case"font":switch(e.font){case"default":return Uint8Array.from([...t,49,48,109]);default:return Uint8Array.from([...t,49,48+e.font,109]);case"fraktur":return Uint8Array.from([...t,50,48,109])}case"propositional_spacing":return e.propositionalSpacing?Uint8Array.from([...t,50,54,109]):Uint8Array.from([...t,53,48,109]);case"fg_color":switch(e.fgColor.colorType){case"4bit":switch(e.fgColor.color4bitType){case"standard":return Uint8Array.from([...t,51,48+ne(e.fgColor.colorName),109]);case"high_intensity":default:return Uint8Array.from([...t,57,48+ne(e.fgColor.colorName),109])}case"8bit":switch(e.fgColor.color8bitType){case"standard":return Uint8Array.from([...t,51,56,59,53,59,...U(ne(e.fgColor.colorName).toString()),109]);case"high_intensity":return Uint8Array.from([...t,51,56,59,53,59,...U((8+ne(e.fgColor.colorName)).toString()),109]);case"rgb":{let n=16+e.fgColor.r*36+e.fgColor.g*6+e.fgColor.b;return Uint8Array.from([...t,51,56,59,53,59,...U(n.toString()),109])}case"grayscale":default:return Uint8Array.from([...t,51,56,59,53,59,...U((232+e.fgColor.lightness).toString()),109])}case"24bit":return Uint8Array.from([...t,51,56,59,50,59,...U(e.fgColor.r.toString()),59,...U(e.fgColor.g.toString()),59,...U(e.fgColor.b.toString()),109]);default:return Uint8Array.from([...t,51,57,109])}case"bg_color":switch(e.bgColor.colorType){case"4bit":switch(e.bgColor.color4bitType){case"standard":return Uint8Array.from([...t,52,48+ne(e.bgColor.colorName),109]);case"high_intensity":default:return Uint8Array.from([...t,49,48,48+ne(e.bgColor.colorName),109])}case"8bit":switch(e.bgColor.color8bitType){case"standard":return Uint8Array.from([...t,52,56,59,53,59,...U(ne(e.bgColor.colorName).toString()),109]);case"high_intensity":return Uint8Array.from([...t,52,56,59,53,59,...U((8+ne(e.bgColor.colorName)).toString()),109]);case"rgb":{let n=16+e.bgColor.r*36+e.bgColor.g*6+e.bgColor.b;return Uint8Array.from([...t,52,56,59,53,59,...U(n.toString()),109])}case"grayscale":default:return Uint8Array.from([...t,52,56,59,53,59,...U((232+e.bgColor.lightness).toString()),109])}case"24bit":return Uint8Array.from([...t,52,56,59,50,59,...U(e.bgColor.r.toString()),59,...U(e.bgColor.g.toString()),59,...U(e.bgColor.b.toString()),109]);default:return Uint8Array.from([...t,52,57,109])}case"emoji_variation":switch(e.emojiVariation){case"framed":return Uint8Array.from([...t,53,49,109]);case"encircled":return Uint8Array.from([...t,53,50,109]);default:return Uint8Array.from([...t,53,52,109])}case"overlined":return e.overlined?Uint8Array.from([...t,53,51,109]):Uint8Array.from([...t,53,53,109]);case"script":switch(e.script){case"superscript":return Uint8Array.from([...t,55,51,109]);case"subscript":return Uint8Array.from([...t,55,52,109]);default:return Uint8Array.from([...t,55,53,109])}case"controll":return Uint8Array.from([e.byte])}},"encodeAnsiAction"),Z=$r;var Kt=v(require("cross-spawn")),Wt=v(require("tty"));var _t="notios",Ne=Object.freeze({rootToken:"NOTIOS_ROOT_TOKEN",parentToken:"NOTIOS_PARENT_TOKEN",doNotAlternate:"NOTIOS_DO_NOT_ALTERNATE"});var Mt=v(require("cross-spawn")),Et=v(require("pidtree")),_e=0,it=o(()=>new Promise(e=>{if(_e<=0){e();return}let t=setInterval(()=>{if(_e<=0){clearInterval(t),e();return}},0)}),"waitKillDone"),_r=o(e=>{if(typeof e=="number")if(process.platform==="win32")(0,Mt.default)("taskkill",["/F","/T","/PID",e.toString()],{stdio:"ignore"});else try{_e+=1,(0,Et.default)(e,(t,n)=>{try{process.kill(e)}catch(r){}if(!t){for(let r of n)try{process.kill(r)}catch(s){}_e-=1}})}catch(t){_e-=1}},"crossKill"),Vt=_r;var Dt=o(()=>({}),"defaultStyContext"),Ft=o((e,t)=>{switch(t.actionType){case"reset":return{};case"fg_color":return T(h({},e),{fgColor:t.fgColor});case"bg_color":return T(h({},e),{bgColor:t.bgColor});case"intensity":return T(h({},e),{intensity:t.intensity});case"italic":return T(h({},e),{italic:t.italic});case"underline":return T(h({},e),{underline:t.underline});case"blink":return T(h({},e),{blink:t.blink});case"invert":return T(h({},e),{invert:t.invert});case"hide":return T(h({},e),{hide:t.hide});case"strike":return T(h({},e),{strike:t.strike});case"font":return T(h({},e),{font:t.font});case"propositional_spacing":return T(h({},e),{propositionalSpacing:t.propositionalSpacing});case"emoji_variation":return T(h({},e),{emojiVariation:t.emojiVariation});case"overlined":return T(h({},e),{overlined:t.overlined});case"script":return T(h({},e),{script:t.script});default:return e}},"applyActionToSty");var st=o(e=>{let t=[...Z({actionType:"reset"})];return e.fgColor!==void 0&&t.push(...Z({actionType:"fg_color",fgColor:e.fgColor})),e.bgColor!==void 0&&t.push(...Z({actionType:"bg_color",bgColor:e.bgColor})),e.intensity!==void 0&&t.push(...Z({actionType:"intensity",intensity:e.intensity})),e.italic!==void 0&&t.push(...Z({actionType:"italic",italic:e.italic})),e.underline!==void 0&&t.push(...Z({actionType:"underline",underline:e.underline})),e.blink!==void 0&&t.push(...Z({actionType:"blink",blink:e.blink})),e.invert!==void 0&&t.push(...Z({actionType:"invert",invert:e.invert})),e.hide!==void 0&&t.push(...Z({actionType:"hide",hide:e.hide})),e.strike!==void 0&&t.push(...Z({actionType:"strike",strike:e.strike})),e.propositionalSpacing!==void 0&&t.push(...Z({actionType:"propositional_spacing",propositionalSpacing:e.propositionalSpacing})),e.emojiVariation!==void 0&&t.push(...Z({actionType:"emoji_variation",emojiVariation:e.emojiVariation})),e.overlined!==void 0&&t.push(...Z({actionType:"overlined",overlined:e.overlined})),e.script!==void 0&&t.push(...Z({actionType:"script",script:e.script})),Uint8Array.from(t)},"restoreSty");var Me=o(()=>({lineCount:0,lines:[],$unreadLines:new Set,$lastLineToTitle:{}}),"$createEmptyLogAccumulated"),zt=o(()=>Me(),"createEmptyLogAccumulated"),jt=o(({forceNoColor:e,enableUnreadMarker:t,historyAlwaysKeepHeadSize:n,historyCacheSize:r})=>{let s=!("NO_COLOR"in process.env||e)&&("FORCE_COLOR"in process.env||process.platform==="win32"||Wt.default.isatty(1)&&process.env.TERM!=="dumb"||"CI"in process.env),c=s?"\x1B[0m":"",a=s?"\x1B[33m":"",b=new Set,y=o(()=>{[...b].forEach(m=>{m()})},"$notifyUpdate"),A=new Map,u=o(m=>{if(m.status==="running"&&m.type==="serial"&&m.children.length>0)if(m.children[0].status==="waiting")B(m.children[0]);else for(let p=0;p+1<m.children.length;p+=1)m.children[p].status==="finished"&&m.children[p+1].status==="waiting"&&B(m.children[p+1])},"$checkSerial"),d=o(m=>{let p=new Set,L=o($=>{p.add($)},"addUpdateListener"),F=o($=>{p.delete($)},"removeUpdateListener"),K=(()=>{for(;;){let $=Math.random().toString().slice(2,14);if(!A.has($))return $}})(),k=T(h({},m),{addUpdateListener:L,removeUpdateListener:F,token:K,$notifyUpdate:()=>{var te;let $=k.children.filter(G=>!G.ignored);if($.length>0&&(k.status=(()=>{let G=$.map(D=>D.status),z=Math.max(...G.map(D=>D==="killed"?0:1))===0,Q=Math.max(...G.map(D=>D==="finished"?0:1))===0,be=Math.max(...G.map(D=>D==="waiting"?0:1))===0;return k.procOwn&&z?"killed":Q?"finished":be?"waiting":"running"})(),k.exitCode=$.reduce((G,z)=>G||z.exitCode,null)),u(k),$.length>0){let G={};k.logAccumulated.lineCount=0;let z=[];for(let D of $){k.logAccumulated.lineCount+=D.logAccumulated.lineCount;let ee=D.name,Ee=0;for(;G[ee];)Ee+=1,ee=`${D.name}(${Ee})`;G[ee]=!0;let ce=D.logAccumulated.lines,Ve=ce.length===0?0:ce[ce.length-1].main.timestamp?ce.length:ce.length-1;if(Ve>0){let Nt=k.logAccumulated.$lastLineToTitle[ee],Ce=0;if(Nt)for(Ce=Ve;Ce>=1&&ce[Ce-1].main.id!==-1&&ce[Ce-1].main.id!==Nt.main.id;)Ce-=1;k.logAccumulated.$lastLineToTitle[ee]=ce[Ve-1],z.push(...ce.slice(Ce,Ve).map(Fo=>({title:ee,main:Fo.main})))}}let Q=k.logAccumulated.lines,be=z.sort((D,ee)=>D.main.timestamp.getTime()-ee.main.timestamp.getTime());if(Q.push(...be),t){let D=k.logAccumulated.$unreadLines;be.forEach(ee=>{D.add(ee)})}}(te=k.parent)==null||te.$notifyUpdate();{let G=k.logAccumulated.lines,z=Math.max(0,n),Q=Math.max(1,r+1);if(G.length>z+Q){k.logOmitted=!0;let be=k.logAccumulated.lines.slice(0,z),D=k.logAccumulated.lines.slice(z);if(t){let ee=k.logAccumulated.$unreadLines;D.slice(0,-Q).forEach(Ee=>{ee.delete(Ee)})}D=D.slice(-Q),k.logAccumulated.lines=[...be,{title:"[NOTIOS]",main:{id:-1,read:!0,timestamp:new Date(0),content:[{type:"style",bytes:Uint8Array.from(Buffer.from(`${c}${a}`))},...[...Buffer.from("[NOTIOS] HISTORY DROPPED")].map(ee=>({type:"print",byte:ee})),{type:"style",bytes:Uint8Array.from(Buffer.from(`${c}`))}]}},...D]}}[...p].forEach(G=>{G()})}});return A.set(K,k),k},"$createNode"),C=o((m,p)=>{if(!p.logOwn)throw new Error("[INTERNAL UNREACHABLE ERROR]: appending to log-accumulate-only node");let[L,F]=nt(p.logOwn.currentParser,new Uint8Array(m));p.logOwn.currentParser=L;for(let K of F){let k=p.logAccumulated.lines,$=p.logAccumulated.$unreadLines;if(k.length===0){let z="",Q={main:{timestamp:void 0,read:!1,id:p.logAccumulated.lineCount,content:[]},title:z};k.push(Q),t&&$.add(Q),p.logAccumulated.$lastLineToTitle[z]=Q}let te=k[k.length-1],G=o(z=>{z.main.timestamp||(z.main.timestamp=new Date,p.logAccumulated.lineCount+=1)},"checkTimestamp");switch(K.actionType){case"print":G(te),te.main.content.push({type:"print",byte:K.byte});break;case"controll":switch(K.char){case"	":G(te),te.main.content.push({type:"print",byte:32});break;case`
`:{G(te);let z="",Q={main:{timestamp:void 0,read:!1,id:p.logAccumulated.lineCount,content:[{type:"style",bytes:st(p.logOwn.currentSty)}]},title:z};k.push(Q),t&&$.add(Q),p.logAccumulated.$lastLineToTitle[z]=Q;break}default:break}break;default:p.logOwn.currentSty=Ft(p.logOwn.currentSty,K),te.main.content.push({type:"style",bytes:st(p.logOwn.currentSty)});break}}},"$appendLogToNode"),g=o(()=>({currentSty:Dt(),currentParser:rt()}),"$createEmptyLogOwn"),N=d({name:"<root>",status:"waiting",type:"none",logOwn:g(),logAccumulated:Me(),logOmitted:!1,children:[],ignored:!1}),P=o(m=>typeof m=="string"?A.get(m):N,"findNodeByToken"),B=o(m=>{if(m.status="running",!m.procOwn){u(m);return}let p=d({name:"<out>",status:"running",type:"none",logOwn:g(),logAccumulated:Me(),logOmitted:!1,children:[],ignored:!1}),L=d({name:"<err>",status:"running",type:"none",logOwn:g(),logAccumulated:Me(),logOmitted:!1,children:[],ignored:!1});m.children=[p,L,...m.children],p.parent=m,L.parent=m,y();let F=Kt.default.spawn(m.procOwn.npmPath,["run",m.name],{stdio:["pipe","pipe","pipe"],cwd:m.procOwn.cwd,env:T(h(h({},process.env),s?{npm_config_color:"always",NO_COLOR:void 0,FORCE_COLOR:"true",CARGO_TERM_COLOR:"always"}:{npm_config_color:"false",NO_COLOR:"true",FORCE_COLOR:"0",CARGO_TERM_COLOR:"none"}),{[Ne.rootToken]:N.token,[Ne.parentToken]:m.token})});m.procOwn.$raw=F,m.$notifyUpdate();let K=o($=>{C($,p),p.$notifyUpdate()},"stdoutDataListener"),k=o($=>{C($,L),L.$notifyUpdate()},"stderrDataListener");F.stdout.on("data",K),F.stderr.on("data",k),F.once("exit",$=>{p.status==="running"&&(p.status="finished"),L.status==="running"&&(L.status="finished"),p.exitCode=$,L.exitCode=$,p.$notifyUpdate(),L.$notifyUpdate(),F.stdout.off("data",K),F.stderr.off("data",k)})},"$startRunning"),O=o(L=>{var F=L,{parentToken:m}=F,p=Te(F,["parentToken"]);let K=P(m);if(K==null)return null;let k=d(T(h({},p),{logOwn:g(),logAccumulated:Me(),logOmitted:!1,children:[],ignored:!1}));return K.children.push(k),k.parent=K,p.procOwn&&p.status==="running"&&B(k),k},"createNode"),Y=o(m=>{b.add(m)},"addUpdateListener"),H=o(m=>{b.delete(m)},"removeUpdateListener"),f=o(m=>{if(!m)return;let p=m;!p.procOwn||p.status!=="finished"&&p.status!=="killed"||(p.children[0].ignored=!0,p.children[1].ignored=!0,B(p),C(Buffer.from(`${c}${a}[NOTIOS] MANUALLY RESTARTED${c}
`),p.children[0]))},"restartNode"),E=o(m=>{!m||(f(m),m.children.forEach(p=>{E(p)}))},"restartAllNode"),V=o(m=>{if(!m)return;let p=m;!p.procOwn||!p.procOwn.$raw||p.status==="running"&&(Vt(p.procOwn.$raw.pid),delete p.procOwn.$raw,p.status="killed",p.children[0].status="killed",p.children[1].status="killed",C(Buffer.from(`
${c}${a}[NOTIOS] MANUALLY KILLED${c}
`),p.children[0]),p.$notifyUpdate())},"killNode"),_=o(m=>{!m||(V(m),m.children.forEach(p=>{_(p)}))},"killAllNode");return{createNode:O,restartNode:f,restartAllNode:E,killNode:V,killAllNode:_,rootNode:N,addUpdateListener:Y,removeUpdateListener:H,findNodeByToken:P,markNodeAsRead:o(m=>{if(!t||!m)return;let p=m,L=o(F=>{[...F.logAccumulated.$unreadLines].forEach(K=>{K.main.read=!0}),F.logAccumulated.$unreadLines.clear(),F.children.forEach(K=>{L(K)})},"internal");L(p),p.$notifyUpdate()},"markNodeAsRead")}},"createProcManager");var Mr=o(({uiOptions:e,notiosConfig:t})=>{let n=jt({forceNoColor:e.forceNoColor,enableUnreadMarker:t.v1.enableUnreadMarker,historyAlwaysKeepHeadSize:t.v1.historyAlwaysKeepHeadSize,historyCacheSize:t.v1.historyCacheSize});return e.initialScriptNames.forEach(r=>{let s=process.cwd();n.createNode({name:r,type:"none",status:"running",procOwn:{cwd:s,command:r,npmPath:Ke({cwd:s})}})}),n},"initiateProcManager"),Ht=Mr;var ge=v(require("node-ipc"));var Gt=o(({procManager:e})=>{ge.default.config.id=`${_t}-${e.rootNode.token}`,ge.default.config.logger=()=>{},ge.default.serve(()=>{ge.default.server.on(e.rootNode.token,(t,n)=>{var c;if(t.runGroups.length<=0)return;let r=e.createNode({name:`[${t.cliName}] ${t.args.join(" ")}`,type:(()=>t.runGroups.length===1?t.runGroups[0].parallel?"parallel":"serial":"none")(),status:"waiting",parentToken:t.parentToken});if(!r)return;for(let a of t.runGroups){let b=(()=>t.runGroups.length===1?r:e.createNode({name:`${a.parallel?"<parallel>":"<serial>"} ${a.patterns.join(" ")}`,type:a.parallel?"parallel":"serial",status:"waiting",parentToken:r.token}))();if(!b)return;let y=!0;for(let A of a.runTasks)e.createNode({name:A.name,status:!y&&!a.parallel?"waiting":"running",type:"none",procOwn:{cwd:t.cwd,command:A.command,npmPath:(c=t.npmPath)!=null?c:t.npmClient},parentToken:b.token}),y=!1}let s=o(()=>{r.status==="finished"&&(ge.default.server.emit(n,"exit",r.exitCode),r.removeUpdateListener(s))},"listener");r.addUpdateListener(s)})}),ge.default.server.start()},"setupIpc");var po=v(require("fs"));var w=o(e=>e,"defineAction"),Er={exit:w({description:"Exit notios app."})},Vr={back:w({description:"Close help page."}),"scroll-down-line":w({description:"Scroll down by single line."}),"scroll-up-line":w({description:"Scroll up by single line."}),"scroll-down-paragraph":w({description:"Scroll down by paragraph size which can be configured(deafult=5)."}),"scroll-up-paragraph":w({description:"Scroll up by paragraph size which can be configured(deafult=5)."}),"scroll-down-page":w({description:"Scroll down by number of lines of visually shown page."}),"scroll-up-page":w({description:"Scroll up by number of lines of visually shown page."}),"scroll-down-half-page":w({description:"Scroll down by half number of lines of visually shown page."}),"scroll-up-half-page":w({description:"Scroll down by half number of lines of visually shown page."}),"scroll-to-bottom":w({description:"Scroll down to the bottom(latest) of messages."}),"scroll-to-top":w({description:"Scroll down to the top(oldest) of messages."})},Dr={back:w({description:"Back to tree-procs page."}),"scroll-down-line":w({description:"Scroll down by single line."}),"scroll-up-line":w({description:"Scroll up by single line."}),"scroll-down-paragraph":w({description:"Scroll down by paragraph size which can be configured(deafult=5)."}),"scroll-up-paragraph":w({description:"Scroll up by paragraph size which can be configured(deafult=5)."}),"scroll-down-page":w({description:"Scroll down by number of lines of visually shown page."}),"scroll-up-page":w({description:"Scroll up by number of lines of visually shown page."}),"scroll-down-half-page":w({description:"Scroll down by half number of lines of visually shown page."}),"scroll-up-half-page":w({description:"Scroll down by half number of lines of visually shown page."}),"scroll-to-bottom":w({description:"Scroll down to the bottom(latest) of messages."}),"scroll-to-top":w({description:"Scroll down to the top(oldest) of messages."}),"scroll-to-leftmost":w({description:"Scroll to the beggining of lines."}),"scroll-right-char":w({description:"Scroll right by single char."}),"scroll-left-char":w({description:"Scroll left by single char."}),"scroll-right-word":w({description:"Scroll right by word size which can be configured(deafult=5)."}),"scroll-left-word":w({description:"Scroll left by word size which can be configured(deafult=5)."}),"toggle-timestamp":w({description:"Toggle timestamp view."}),"toggle-label":w({description:"Toggle label view. Note that <out>/<err> messages does not have label."})},Fr={"cursor-prev":w({description:"Cursor prev."}),"cursor-next":w({description:"Cursor next."}),"select-script":w({description:"Go to select-script page."}),expand:w({description:"Expand process node under the cursor."}),collapse:w({description:"Collapse process node under the cursor."}),restart:w({description:"Restart process node under the cursor if possible."}),"restart-recrusive":w({description:"Restart processes of all node of subtree of node under the cursor."}),kill:w({description:"Kill process node under the cursor if possible."}),"kill-recrusive":w({description:"Kill processes of all node of subtree of node under the cursor."}),inspect:w({description:"Inspect process node under the cursor."})},Kr={back:w({description:"Back to tree-procs page."}),"cursor-prev":w({description:"Cursor prev."}),"cursor-next":w({description:"Cursor next."}),"start-and-back":w({description:"Start script under the cursor and back to tree-procs."}),start:w({description:"Just start script under the cursor."})},ue={common:Er,"inspect-proc":Dr,"tree-procs":Fr,"select-script":Kr,help:Vr},qt=["common","inspect-proc","tree-procs","select-script","help"];var Jt=[{type:"special",special:"return"},{type:"char",char:"m",ctrl:!0}],Yt=[{type:"special",special:"upArrow"},{type:"special",special:"tab",shift:!0},{type:"char",char:"k"},{type:"char",char:"p",ctrl:!0}],Zt=[{type:"special",special:"downArrow"},{type:"special",special:"tab"},{type:"char",char:"i",ctrl:!0},{type:"char",char:"j"},{type:"char",char:"n",ctrl:!0}],Xt=[{type:"special",special:"leftArrow"},{type:"char",char:"h"},{type:"char",ctrl:!0,char:"b"}],ct=[{type:"special",special:"rightArrow"},{type:"char",char:"l"},{type:"char",ctrl:!0,char:"f"}],at=[{type:"special",special:"backspace"},{type:"special",special:"delete"},{type:"char",char:"h",ctrl:!0},{type:"char",char:"q"},{type:"char",char:"o",ctrl:!0}],Qt=[{type:"special",special:"downArrow"},{type:"char",char:"j"},{type:"char",ctrl:!0,char:"e"},{type:"char",ctrl:!0,char:"n"}],Rt=[{type:"special",special:"upArrow"},{type:"char",char:"k"},{type:"char",ctrl:!0,char:"y"},{type:"char",ctrl:!0,char:"p"}],eo=[{type:"special",special:"downArrow",ctrl:!0},{type:"special",special:"upWheel"}],to=[{type:"special",special:"upArrow",ctrl:!0},{type:"special",special:"downWheel"}],oo=[],ro=[],no=[{type:"special",special:"pageDown"},{type:"char",char:"d"}],io=[{type:"special",special:"pageUp"},{type:"char",char:"u"}],so=[{type:"special",special:"end",ctrl:!0},{type:"char",char:"g",shift:!0}],co=[{type:"special",special:"home",ctrl:!0},{type:"char",char:"g"}],Wr={v1:{keymappings:{common:{exit:[{type:"char",char:"c",ctrl:!0}]},help:{back:at,"scroll-down-line":Qt,"scroll-up-line":Rt,"scroll-down-paragraph":eo,"scroll-up-paragraph":to,"scroll-down-page":oo,"scroll-up-page":ro,"scroll-down-half-page":no,"scroll-up-half-page":io,"scroll-to-bottom":so,"scroll-to-top":co},"tree-procs":{"cursor-prev":Yt,"cursor-next":Zt,"select-script":[{type:"char",char:"n"}],expand:ct,collapse:Xt,restart:[{type:"char",char:"r"}],"restart-recrusive":[],kill:[{type:"char",char:"x"}],"kill-recrusive":[],inspect:Jt},"select-script":{back:at,"cursor-prev":[...Yt,{type:"special",special:"downWheel"}],"cursor-next":[...Zt,{type:"special",special:"upWheel"}],"start-and-back":[...Jt,...ct],start:[]},"inspect-proc":{back:at,"scroll-down-line":Qt,"scroll-up-line":Rt,"scroll-down-paragraph":eo,"scroll-up-paragraph":to,"scroll-down-page":oo,"scroll-up-page":ro,"scroll-down-half-page":no,"scroll-up-half-page":io,"scroll-to-bottom":so,"scroll-to-top":co,"scroll-to-leftmost":[{type:"special",special:"home"},{type:"char",char:"^"},{type:"char",char:"0"}],"scroll-right-char":ct,"scroll-left-char":Xt,"scroll-right-word":[{type:"special",special:"rightArrow",ctrl:!0},{type:"char",char:"e"},{type:"char",meta:!0,char:"f"}],"scroll-left-word":[{type:"special",special:"leftArrow",ctrl:!0},{type:"char",char:"b"},{type:"char",meta:!0,char:"b"}],"toggle-timestamp":[{type:"char",char:"t"}],"toggle-label":[{type:"char",char:"v"}]}},paragraphSize:5,wordSize:5,showTimestampByDefault:!1,showLabelByDefault:!0,showScriptCommandInSelectScript:!0,showScriptCommandInTreeProcs:!0,enableUnreadMarker:!0,enableTimeElapseGradationBar:!0,historyAlwaysKeepHeadSize:100,historyCacheSize:3e3}},zr=Wr,lt=zr;var ao=["return","backspace","delete","pageUp","pageDown","downArrow","upArrow","rightArrow","leftArrow","tab"];var j=o(e=>{switch(e.type){case"char":return e.char+(e.ctrl?"c":"-")+(e.meta?"m":"-")+(e.shift?"s":"-");case"special":return e.special+";"+(e.ctrl?"c":"-")+(e.shift?"s":"-")}},"keymappingToString"),jr=o(e=>{switch(e.type){case"char":return(e.ctrl?"C-":"")+(e.meta?"M-":"")+(e.shift?"S-":"")+(e.char===" "?"<SPACE>":e.char);case"special":return(e.ctrl?"C-":"")+(e.shift?"S-":"")+e.special}},"keymappingToRepr"),Hr=o(e=>e.type==="seq"?e.seq:[e],"toSeq"),He=o(e=>{let t={children:new Map},n=(()=>Object.entries(e).filter(a=>a[1]!=null).flatMap(([a,b])=>b.map(y=>[a,Hr(y)])).sort(([,a],[,b])=>a.length-b.length))();for(let[r,s]of n){if(s.length===0)throw new Error(`Keymap for action "${r}" is zero-length sequential, which is not allowed.`);let c=t;for(let a of s){let b=j(a),y=c.children.get(b);if(y==null){let A={children:new Map};c.children.set(b,A),c=A}else c=y;if(c.action!=null)throw new Error(`Keymap for action "${r}" [${s.map(A=>jr(A)).join(" ")}] including keymap for action "${c.action}".`)}c.action=r}return t},"constructKeymapping"),lo=o((e,t,n)=>{let r={ctrl:n.ctrl,meta:n.meta,shift:n.shift},s=(()=>{{let a={ctrl:t.startsWith("[1;5")||t.startsWith("[1;6"),shift:t.startsWith("[1;2")||t.startsWith("[1;6")};if(/^\[B(?:\x1b\[B)+$/.test(t))return j({type:"special",special:"upWheel"});if(/^\[A(?:\x1b\[A)+$/.test(t))return j({type:"special",special:"downWheel"});if(t==="[1~")return j(T(h({},a),{type:"special",special:"home"}));if(t==="[4~")return j(T(h({},a),{type:"special",special:"end"}));if(t==="[5;2~")return j(T(h({},a),{type:"special",special:"pageUp",shift:!0}));if(t==="[6;2~")return j(T(h({},a),{type:"special",special:"pageDown",shift:!0}));if(t==="[5;6~")return j(T(h({},a),{type:"special",special:"pageUp",ctrl:!0,shift:!0}));if(t==="[6;6~")return j(T(h({},a),{type:"special",special:"pageDown",ctrl:!0,shift:!0}));if(a.ctrl||a.shift){if(t.endsWith("H"))return j(T(h({},a),{type:"special",special:"home"}));if(t.endsWith("F"))return j(T(h({},a),{type:"special",special:"end"}));if(t.endsWith("D"))return j(T(h({},a),{type:"special",special:"leftArrow"}));if(t.endsWith("B"))return j(T(h({},a),{type:"special",special:"downArrow"}));if(t.endsWith("C"))return j(T(h({},a),{type:"special",special:"rightArrow"}));if(t.endsWith("A"))return j(T(h({},a),{type:"special",special:"upArrow"}))}}for(let a of ao)if(n[a])return j(a==="tab"?{type:"special",special:a,shift:r.shift}:a==="delete"||a==="backspace"||a==="return"?{type:"special",special:a}:T(h({},r),{type:"special",special:a}));return j(T(h({},r),{type:"char",char:t.toLowerCase()}))})(),c=e.children.get(s);return c==null?[void 0,void 0]:c.action!=null?[void 0,c.action]:[c,void 0]},"matchKeymapping");var uo=o(({uiOptions:{configFileFullPath:e}})=>{let t=(()=>{try{return po.default.readFileSync(e)}catch(r){return null}})(),n=(()=>t===null?lt:require(e)(lt))();return qt.filter(r=>r!=="common").map(r=>{pe(()=>{He(h(h({},n.v1.keymappings.common),n.v1.keymappings[r]))},[`Detected the confliction of keymapping or invalid configuration for page "${r}"(including "common" keymapping).`,"See error message for more details.","Review your notios configuration."].join(" "))}),n.v1.keymappings.common.exit.length<1&&pe(()=>{throw new Error("no keymapping for exit")},"Keymapping for common.exit is necessary because you would be unable to exit notios."),n},"setupNotiosConfig");var mo=o(()=>{process.platform!=="win32"&&process.env[Ne.doNotAlternate]!=="1"&&process.stdout.write("\x1B[?1049h")},"setupTerminal"),Ge=o(()=>{if(process.platform!=="win32"&&process.env[Ne.doNotAlternate]!=="1"&&!process.stdout.write("\x1B[?1049l")){process.stdout.once("drain",()=>{it().then(()=>{process.exit(0)})});return}it().then(()=>{process.exit(0)})},"exitNotios");var Mo=require("ink"),Eo=v(require("react"));var X=v(require("react"));var Se=v(require("react")),fo=o(()=>{let[e,t]=(0,Se.useState)("");return{inspectingToken:e,setInspectingToken:t}},"useInspectContextDefaultValue"),Gr=o(()=>Se.default.createContext(void 0),"createInspectContext"),pt=Gr(),qe=o(()=>(0,Se.useContext)(pt),"useInspectContext");var Je=v(require("react")),qr=o(()=>Je.default.createContext(void 0),"createNotiosConfigContext"),ut=qr(),de=o(()=>(0,Je.useContext)(ut),"useNotiosConfigContext");var Pe=v(require("react")),Jr="select-script",yo=o(()=>{let[e,t]=(0,Pe.useState)(Jr);return{page:e,setPage:t}},"usePageContextDefaultValue"),Yr=o(()=>Pe.default.createContext(void 0),"createPageContext"),dt=Yr(),ke=o(()=>(0,Pe.useContext)(dt),"usePageContext");var Ye=v(require("react")),Zr=o(()=>Ye.default.createContext(void 0),"createProcManagerContext"),mt=Zr(),ve=o(()=>(0,Ye.useContext)(mt),"useProcManagerContext");var ie=v(require("react")),go=o(()=>{let[e,t]=(0,ie.useState)(process.stdout.rows),[n,r]=(0,ie.useState)(process.stdout.columns);return(0,ie.useEffect)(()=>{let s=setInterval(()=>{t(process.stdout.rows),r(process.stdout.columns)},1e3);return()=>{clearInterval(s)}},[]),(0,ie.useEffect)(()=>{let s=o(()=>{t(process.stdout.rows),r(process.stdout.columns)},"handleResize");return process.stdout.on("resize",s),()=>{process.stdout.off("resize",s)}},[]),{termWidth:n,termHeight:e}},"useTermShapeContextDefaultValue"),Xr=o(()=>ie.default.createContext(void 0),"createTermShapeContext"),ft=Xr(),me=o(()=>(0,ie.useContext)(ft),"useTermShapeContext");var he=v(require("react")),ho=o(()=>{let[e,t]=(0,he.useState)(null),[n,r]=(0,he.useState)({});return{selectedNodeToken:e,setSelectedNodeToken:t,openMap:n,setOpenMap:r}},"useTreeProcContextDefaultValue"),Qr=o(()=>he.default.createContext(void 0),"createTreeProcContext"),yt=Qr(),xo=o(()=>(0,he.useContext)(yt),"useTreeProcContext");var Ze=v(require("react")),Rr=o(()=>Ze.default.createContext(void 0),"createUiOptionsContext"),gt=Rr(),Ao=o(()=>(0,Ze.useContext)(gt),"useUiOptionsContext");var bo=require("ink"),Xe=require("react");var en=o(({page:e,actionMaps:t,notiosConfig:n,disabled:r})=>{let s=(0,Xe.useMemo)(()=>He(T(h({},n.keymappings[e]),{help:[{type:"char",char:"?"}]})),[e,t,n]),[c,a]=(0,Xe.useState)(s);(0,bo.useInput)((b,y)=>{if(r)return;let[A,u]=lo(c,b,y);A!=null?a(A):a(s),u!=null&&t[u]()})},"useAction"),se=en;var Ae=require("ink"),I=v(require("react"));var Co=v(require("ink-divider")),ht=v(require("react"));var Qe=require("ink"),ae=v(require("react"));var tn=o(n=>{var r=n,{children:e}=r,t=Te(r,["children"]);let s=(0,ae.useRef)(null),[c,a]=(0,ae.useState)(1),[b,y]=(0,ae.useState)(1),{termWidth:A,termHeight:u}=me();return(0,ae.useEffect)(()=>{let d=setInterval(()=>{if(!s.current)return;let{width:C,height:g}=(0,Qe.measureElement)(s.current);Number.isNaN(C)||(y(C),a(g),clearInterval(d))},50);return()=>{clearInterval(d)}},[A,u]),ae.default.createElement(Qe.Box,T(h({},T(h({},t),{children:e==null?void 0:e({width:b,height:c})})),{ref:s}))},"BoxWithSize"),fe=tn;var on=o(({title:e,dividerChar:t,dividerColor:n})=>ht.default.createElement(fe,null,({width:r})=>ht.default.createElement(Co.default,{title:e,dividerChar:t,dividerColor:n,width:Math.max(r-5,1)})),"FullDivider"),ye=on;var x=require("ink"),l=v(require("react"));var xe=require("ink"),le=v(require("react"));var rn=o(({lines:e,top:t,select:n,height:r,onScrollRequest:s})=>le.default.createElement(fe,{height:"100%",width:"100%",flexDirection:"column"},({height:c,width:a})=>{let b=r!=null?r:c,y=Math.max(Math.min(t,e.length),0),A=y>0,u=y+b<e.length+2;return n!=null&&b>3&&(n<y?s==null||s(n):n>y+b-3&&(s==null||s(n-b+3))),le.default.createElement(le.default.Fragment,null,le.default.createElement(xe.Box,{height:1,width:"100%"},le.default.createElement(xe.Text,{inverse:!0,color:"cyan"},A?"^".repeat(Math.max(a-5,3)):"")),le.default.createElement(xe.Box,{width:"100%",flexGrow:1,flexDirection:"column"},e.slice(y,y+b-2)),le.default.createElement(xe.Box,{height:1,width:"100%"},le.default.createElement(xe.Text,{inverse:!0,color:"cyan"},u?"v".repeat(Math.max(a-5,3)):"")))}),"VerticalScrollable"),Ue=rn;var To=o(e=>{let t="blue",n="cyan",r="yellow";switch(e.type){case"seq":return l.default.createElement(l.default.Fragment,null,e.seq.map((s,c)=>l.default.createElement(l.default.Fragment,null,To(s),e.seq.length>c+1&&l.default.createElement(x.Text,{wrap:"truncate",color:"gray"}," then "))));case"char":return l.default.createElement(l.default.Fragment,null,e.ctrl&&l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Text,{wrap:"truncate",color:r},"CTRL"),l.default.createElement(x.Text,{wrap:"truncate"},"-")),e.meta&&l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Text,{wrap:"truncate",color:r},"META"),l.default.createElement(x.Text,{wrap:"truncate"},"-")),e.shift&&l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Text,{wrap:"truncate",color:r},"SHIFT"),l.default.createElement(x.Text,{wrap:"truncate"},"-")),l.default.createElement(x.Text,{wrap:"truncate",color:t},e.char===" "?"<SPACE>":e.char));case"special":return l.default.createElement(l.default.Fragment,null,e.ctrl&&l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Text,{wrap:"truncate",color:r},"CTRL"),l.default.createElement(x.Text,{wrap:"truncate"},"-")),e.shift&&l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Text,{wrap:"truncate",color:r},"SHIFT"),l.default.createElement(x.Text,{wrap:"truncate"},"-")),l.default.createElement(x.Text,{wrap:"truncate",color:n},e.special))}},"keymappingToText"),wo=o(({page:e,title:t,actions:n,denyHelpOpen:r,onClose:s})=>{let{notiosConfig:c}=de(),[a,b]=(0,l.useState)(0),[y,A]=(0,l.useState)(!1),{termWidth:u,termHeight:d}=me(),C=[l.default.createElement(x.Box,{key:"title",height:1},l.default.createElement(x.Text,{wrap:"truncate"},t)),l.default.createElement(x.Box,{key:"divider",height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"*".repeat(20))),l.default.createElement(x.Box,{key:"doc-1",height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"Keymapping can be configured in "),l.default.createElement(x.Text,{wrap:"truncate",color:"green"},"notios.config.cjs"),l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},".")),l.default.createElement(x.Box,{key:"doc-2",height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"Please visit the")),l.default.createElement(x.Box,{key:"doc-3",height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"cyan"},"documentation ( https://github.com/frouriojs/notios#readme )")),l.default.createElement(x.Box,{key:"doc-4",height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"for more information.")),l.default.createElement(x.Box,{key:"empty",height:1},l.default.createElement(x.Text,{wrap:"truncate"}," ")),...Object.entries(n).flatMap(([O,Y])=>[l.default.createElement(x.Box,{key:`${O}:top-empty-1`,height:1},l.default.createElement(x.Text,{wrap:"truncate"}," ")),l.default.createElement(x.Box,{key:`${O}:top-empty-2`,height:1},l.default.createElement(x.Text,{wrap:"truncate"}," ")),l.default.createElement(x.Box,{key:`${O}:top-sep`,height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"=".repeat(20))),l.default.createElement(x.Box,{key:`${O}:actionName`,height:1},l.default.createElement(x.Text,{wrap:"truncate"},'"',O,'"')),l.default.createElement(x.Box,{key:`${O}:description`,height:1},l.default.createElement(x.Text,{wrap:"truncate"},"  * ",Y.description)),l.default.createElement(x.Box,{key:`${O}:center-sep`,height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"-".repeat(20))),...(()=>{let H=c.keymappings[e][O];return H.length===0?[l.default.createElement(x.Box,{key:`${O}:no-keymappings`,height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"  No keymappings"))]:H.map((f,E)=>{let V=To(f);return l.default.createElement(x.Box,{key:`${O}:keymapping-${E}`,height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"  - "),V)})})(),l.default.createElement(x.Box,{key:`${O}:bottom-sep`,height:1},l.default.createElement(x.Text,{wrap:"truncate",color:"gray"},"=".repeat(20)))])],g=Math.max(0,C.length-d+4),N=0,P=o(O=>{b(Math.max(Math.min(a+O,g),N))},"moveTopBy"),B=o(O=>P(-O),"moveBottomBy");return(0,l.useEffect)(()=>{P(0)},[u,d]),se({page:"help",actionMaps:{help:()=>{r||A(!0)},back:()=>{s==null||s()},"scroll-down-line":()=>{B(-1)},"scroll-up-line":()=>{B(1)},"scroll-down-paragraph":()=>{B(-c.paragraphSize)},"scroll-up-paragraph":()=>{B(c.paragraphSize)},"scroll-down-page":()=>{B(-d)},"scroll-up-page":()=>{B(d)},"scroll-down-half-page":()=>{B(-(d>>1))},"scroll-up-half-page":()=>{B(d>>1)},"scroll-to-bottom":()=>{b(g)},"scroll-to-top":()=>{b(N)}},notiosConfig:c,disabled:y}),y&&!r?l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Box,{flexDirection:"column",flexGrow:1},l.default.createElement(wo,{page:"help",title:"Help for help page",actions:ue.help,onClose:()=>A(!1),denyHelpOpen:!0}))):l.default.createElement(l.default.Fragment,null,l.default.createElement(x.Box,{flexDirection:"column",flexGrow:1},l.default.createElement(Ue,{top:a,lines:C})),l.default.createElement(ye,null),l.default.createElement(x.Box,{height:1},r?l.default.createElement(x.Text,{wrap:"truncate"},"Sorry, can't help anymore."):l.default.createElement(x.Text,{wrap:"truncate"},"Press [?] to open help of help.")))},"HelpPortal"),Le=wo;var wt=v(require("react"));var q=require("ink"),W=v(require("react"));function xt({onlyFirst:e=!1}={}){let t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")}o(xt,"ansiRegex");function At(e){if(typeof e!="string")throw new TypeError(`Expected a \`string\`, got \`${typeof e}\``);return e.replace(xt(),"")}o(At,"stripAnsi");function bt(){let e="\\ud800-\\udfff",t="\\u0300-\\u036f",n="\\ufe20-\\ufe2f",r="\\u20d0-\\u20ff",s="\\u1ab0-\\u1aff",c="\\u1dc0-\\u1dff",a=t+n+r+s+c,b="\\ufe0e\\ufe0f",y="\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c14\\u0c60-\\u0c61",A="\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4c\\u0c62-\\u0c63",u="\\u0c15-\\u0c28\\u0c2a-\\u0c39",d="\\u0c58-\\u0c5a",C="\\u0c01-\\u0c03\\u0c4d\\u0c55\\u0c56",N=`[${y}(?:${u}(?!\\u0c4d))\\u0c66-\\u0c6f\\u0c78-\\u0c7e${d}]`,P=`[${u}${d}][${A}]|[${u}${d}][${C}`,O=`(?:${`[${u}]\\u0c4d[${u}]`}|${P}|${N})`,Y=`[${e}]`,H=`[${a}]`,f="\\ud83c[\\udffb-\\udfff]",E=`(?:${H}|${f})`,V=`[^${e}]`,_="(?:\\ud83c[\\udde6-\\uddff]){2}",R="[\\ud800-\\udbff][\\udc00-\\udfff]",m="\\u200d",p="(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40(?:\\udc65|\\udc73|\\udc77)\\udb40(?:\\udc6e|\\udc63|\\udc6c)\\udb40(?:\\udc67|\\udc74|\\udc73)\\udb40\\udc7f)",L=`${E}?`,F=`[${b}]?`,K=`(?:${m}(?:${[V,_,R].join("|")})${F+L})*`,k=F+L+K,$=`${V}${H}?`,te=`(?:${[p,$,H,_,R,Y].join("|")})`;return new RegExp(`${f}(?=${f})|${O}|${te+k}`,"g")}o(bt,"charRegex");function Ct(e,{countAnsiEscapeCodes:t=!1}={}){return e===""||(t||(e=At(e)),e==="")?0:e.match(bt()).length}o(Ct,"stringLength");var Tt=v(require("wcwidth"));var Re=require("react"),nn=o(()=>{let[e,t]=(0,Re.useState)(new Date().getTime());return(0,Re.useEffect)(()=>{let n=setInterval(()=>{t(new Date().getTime())},1e3);return()=>{clearInterval(n)}}),e},"useCurrentMs"),No=nn;var So=v(require("wcwidth")),sn=o((e,t,n)=>{let r=o(u=>{let d=[];for(let N=0;N<u;N+=1){let P=e[N];switch(P.type){case"print":d.push(P.byte);break;default:break}}let C=Buffer.from(d).toString("utf-8"),g=C.length;for(;g>0&&C[g-1]==="\uFFFD";)g-=1;return(0,So.default)(C.slice(0,g))},"wclen");t===void 0&&(t=0),n===void 0&&(n=r(e.length)+1),n<0&&(n=0);let s=(()=>{let u=-1,d=e.length;for(;u+1<d;){let C=u+d+1>>1;r(C)>=t?d=C:u=C}return d})(),c=(()=>{let u=-1,d=e.length;for(;u+1<d;){let C=u+d+1>>1;r(C)>=n?d=C:u=C}return r(d)>n?d-1:d})(),[a,b]=(()=>{for(let u=Math.min(s,e.length-1);u>=0;u-=1){let d=e[u];if(d.type==="style")return[u,[...d.bytes]]}return[-1,[]]})();a===s&&(s+=1);let y=b,A=b.filter(u=>32<=u&&u<=126).length;for(let u=s;u<c;u+=1){let d=e[u];switch(d.type){case"style":A+=d.bytes.filter(C=>32<=C&&C<=126).length,y.push(...d.bytes);break;default:y.push(d.byte);break}}return{stylePrintableBytesLength:A,sliced:Buffer.from(y).toString("utf-8")}},"logWcslice"),et=sn;var cn=o(e=>`${e.getFullYear()}/${`0${e.getMonth()+1}`.slice(-2)}/${`0${e.getDate()}`.slice(-2)} ${`0${e.getHours()}`.slice(-2)}:${`0${e.getMinutes()}`.slice(-2)}:${`0${e.getSeconds()}`.slice(-2)}`,"formatDate"),an=o(e=>"#"+("0"+Math.min(Math.max(Math.round(e*255),0),255).toString(16)).slice(-2).repeat(3),"rateToRgbHex"),ln=o(e=>{if(e==="<out>")return"cyan";if(e==="<err>")return"red";let t=["green","blue","yellow","grey","magenta","redBright","greenBright","blueBright","cyanBright","yellowBright","greyBright","magentaBright"],n=0;for(let r of e)n=(n+r.charCodeAt(0))%t.length;return t[n]},"colorOfStr"),pn=o(({lines:e,top:t=0,left:n=0,showTimestamp:r,showTitle:s,enableUnreadMarker:c,enableTimeElapseGradationBar:a})=>{let b=(0,W.useCallback)(({height:A,width:u})=>{let d=[];for(let C=Math.max(t,0);C<t+A&&C<e.length;C+=1){let g=e[C];if(!g.main.timestamp)continue;let N=r?`(${g.main.timestamp?cn(g.main.timestamp):"???"})`:"",P=s&&g.title?`[${g.title}]`:"",B=n,O=c||a?3:0,Y=6,H=n+u-Y-O-N.length-(0,Tt.default)(P),{sliced:f,stylePrintableBytesLength:E}=et(g.main.content,B,H),V=et(g.main.content.filter(R=>R.type==="print"),B,H).sliced,_=(0,Tt.default)(f)-(V.length-Ct(V))-E;d.push({ts:N,timestamp:g.main.timestamp,read:Boolean(g.main.read),title:P,fixWidth:_,abs:t+C,left:B>0?"~":"",text:f,right:f!==et(g.main.content,B).sliced?"~":""})}return d},[e,t,n,r,s]),y=o(({left:A,read:u,ts:d,text:C,right:g,timestamp:N,title:P,fixWidth:B})=>{let O=No(),Y=N==null?1:Math.min(.04+kt(.93,(O-N.getTime())/1e3),1);return W.default.createElement(q.Box,{height:1},(()=>{if(a)return W.default.createElement(q.Box,null,W.default.createElement(q.Text,{color:Y<.5?"#ffffff":"#000000",backgroundColor:an(Y)},!u&&c?" @ ":"   "));if(c)return W.default.createElement(q.Box,null,W.default.createElement(q.Text,null,u?"   ":" @ "))})(),W.default.createElement(q.Box,null,W.default.createElement(q.Text,{color:"gray"},d)),W.default.createElement(q.Box,null,W.default.createElement(q.Text,{color:ln(P)},P)),W.default.createElement(q.Box,{width:1},W.default.createElement(q.Text,{color:"gray",inverse:!0},A)),W.default.createElement(q.Box,{width:B},W.default.createElement(q.Text,{wrap:"end"},C)),W.default.createElement(q.Box,{width:1},W.default.createElement(q.Text,{color:"gray",italic:!0},g)))},"Main");return W.default.createElement(fe,{height:"100%",width:"100%",flexDirection:"column"},({width:A,height:u})=>b({width:A,height:u}).map(d=>W.default.createElement(y,h({key:d.abs,width:A,height:u},d))))},"LogScrollable"),Po=pn;var un=o(r=>{var s=r,{bottom:e=0,lines:t}=s,n=Te(s,["bottom","lines"]);return wt.default.createElement(fe,{height:"100%",width:"100%"},({height:c})=>wt.default.createElement(Po,T(h({},n),{lines:t,top:Math.max(t.length-c-e,0)})))},"LogScrollableCounter"),ko=un;var dn=o(({})=>{var p;let{setPage:e}=ke(),{notiosConfig:t}=de(),{inspectingToken:n}=qe(),[r,s]=(0,I.useState)(0),[c,a]=(0,I.useState)(0),b=ve(),y=b.findNodeByToken(n),[A,u]=(0,I.useState)((p=y==null?void 0:y.logAccumulated)!=null?p:zt()),[d,C]=(0,I.useState)(A.lines.length),{termWidth:g,termHeight:N}=me(),[P,B]=(0,I.useState)(t.showLabelByDefault),[O,Y]=(0,I.useState)(t.showTimestampByDefault),[H,f]=(0,I.useState)(!1),E=Math.max(0,A.lines.length-N+2),V=Math.min(0,-N+2+1),_=o(L=>{s(Math.max(Math.min(r+L,E),V))},"moveBottomBy"),R=o(L=>{a(Math.max(c+L,0))},"moveLeftBy"),m=(0,I.useMemo)(()=>r===0?0:Math.max(Math.min(r+A.lines.length-d,E),V),[r,d,E,V]);return(0,I.useEffect)(()=>{r!==0&&s(r+A.lines.length-d),C(A.lines.length)},[A,r,d,E,V]),(0,I.useEffect)(()=>{_(0),R(0)},[g,N]),se({page:"inspect-proc",actionMaps:{help:()=>{f(!0)},back:()=>{b.markNodeAsRead(y),e("tree-procs")},"scroll-down-line":()=>{_(-1)},"scroll-up-line":()=>{_(1)},"scroll-down-paragraph":()=>{_(-t.paragraphSize)},"scroll-up-paragraph":()=>{_(t.paragraphSize)},"scroll-down-page":()=>{_(-N)},"scroll-up-page":()=>{_(N)},"scroll-down-half-page":()=>{_(-(N>>1))},"scroll-up-half-page":()=>{_(N>>1)},"scroll-to-bottom":()=>{s(0)},"scroll-to-top":()=>{s(E)},"scroll-to-leftmost":()=>{a(0)},"scroll-right-char":()=>{R(1)},"scroll-left-char":()=>{R(-1)},"scroll-right-word":()=>{R(t.wordSize)},"scroll-left-word":()=>{R(-t.wordSize)},"toggle-timestamp":()=>{Y(L=>!L)},"toggle-label":()=>{B(L=>!L)}},notiosConfig:t,disabled:H}),(0,I.useEffect)(()=>{if(!y)return;let L=o(()=>{u(h({},y.logAccumulated))},"listener");return y.addUpdateListener(L),()=>{y.removeUpdateListener(L)}},[y]),H?I.default.createElement(Le,{page:"inspect-proc",actions:ue["inspect-proc"],title:"Help for inspect process page",onClose:()=>f(!1)}):y?I.default.createElement(I.default.Fragment,null,I.default.createElement(Ae.Box,{height:"100%",width:"100%",flexDirection:"column",flexGrow:1},I.default.createElement(ko,{lines:A.lines,left:c,bottom:m,showTitle:P,showTimestamp:O,enableUnreadMarker:t.enableUnreadMarker,enableTimeElapseGradationBar:t.enableTimeElapseGradationBar})),I.default.createElement(ye,{dividerChar:m>0?"\u2500":"=",title:m>0?`${m}`:void 0,dividerColor:m>0?"cyan":"cyanBright"}),I.default.createElement(Ae.Box,null,I.default.createElement(Ae.Box,{marginRight:2},I.default.createElement(Ae.Text,{wrap:"truncate"},"Press [?] to open help.")))):I.default.createElement(Ae.Text,{wrap:"truncate",color:"red"},"Process not found.")},"InspectProc"),vo=dn;var oe=require("ink"),Uo=v(require("path")),J=v(require("react"));var mn=o(({})=>{let{setPage:e}=ke(),{notiosConfig:t}=de(),n=ve(),{scripts:r,manifestFullPath:s,npmClient:c}=Ao(),[a,b]=(0,J.useState)(0),[y,A]=(0,J.useState)(0),[u,d]=(0,J.useState)(!1),C=o(()=>{n.createNode({name:r[a].name,type:"none",procOwn:{command:r[a].command,cwd:Uo.default.dirname(s),npmPath:c},status:"running"})},"startCurrentSelecting");return se({page:"select-script",actionMaps:{help:()=>{d(!0)},"cursor-prev":()=>{b(g=>(g+r.length-1)%r.length)},"cursor-next":()=>{b(g=>(g+1)%r.length)},back:()=>{n.rootNode.children.length!==0&&e("tree-procs")},"start-and-back":()=>{C(),e("tree-procs")},start:()=>{C()}},notiosConfig:t,disabled:u}),u?J.default.createElement(Le,{page:"select-script",actions:ue["select-script"],title:"Help for select script page",onClose:()=>d(!1)}):J.default.createElement(oe.Box,{flexDirection:"column",flexGrow:1},J.default.createElement(oe.Box,{flexDirection:"column",flexGrow:1},J.default.createElement(oe.Text,{wrap:"truncate"},s),J.default.createElement(Ue,{top:y,select:a,onScrollRequest:g=>{A(g)},lines:r.map((g,N)=>J.default.createElement(oe.Box,{key:g.name},J.default.createElement(oe.Text,{wrap:"truncate",color:"yellow",inverse:a===N},g.name),t.showScriptCommandInSelectScript&&J.default.createElement(oe.Text,{wrap:"truncate",color:"cyan"}," ","(",g.command,")")))})),J.default.createElement(ye,null),J.default.createElement(oe.Box,null,J.default.createElement(oe.Box,{marginRight:2},J.default.createElement(oe.Text,{wrap:"truncate"},"Press [?] to open help."))))},"SelectScript"),Lo=mn;var M=require("ink"),S=v(require("react"));var fn=o(({})=>{let{setPage:e}=ke(),{notiosConfig:t}=de(),{setInspectingToken:n}=qe(),r=ve(),{openMap:s,selectedNodeToken:c,setSelectedNodeToken:a,setOpenMap:b}=xo(),[y,A]=(0,S.useState)(!1),u=o((f,E)=>{var m;let V=` ${f.name}`,_=` (${f.logAccumulated.lineCount} LINES)`,R=(m=f.procOwn)!=null&&m.command?` (${f.procOwn.command})`:"";return s[f.token]&&f.children.length>0?[{indent:"",symbol:"v",main:V,linesStat:_,command:R,node:f},...f.children.flatMap(p=>u(p,E)).map(p=>T(h({},p),{indent:`${E}${p.indent}`}))]:[{indent:"",symbol:f.children.length>0?">":"-",main:V,linesStat:_,command:R,node:f}]},"dfs"),[{rootNode:d},C]=(0,S.useState)({rootNode:r.rootNode});(0,S.useEffect)(()=>{let f=o(()=>{C({rootNode:r.rootNode})},"listener");return r.addUpdateListener(f),r.rootNode.addUpdateListener(f),()=>{r.removeUpdateListener(f),r.rootNode.removeUpdateListener(f)}},[r]);let g=d.children.flatMap(f=>u(f,"  ")),N=(0,S.useMemo)(()=>{if(c===null)return 0;let f=g.findIndex(E=>E.node.token===c);return f===-1?0:f},[g,c]),P=(0,S.useMemo)(()=>g[N].node,[g,N]),[B,O]=(0,S.useState)(0),Y=(0,S.useMemo)(()=>!(!P.procOwn||P.status!=="finished"&&P.status!=="killed"),[g,N]),H=(0,S.useMemo)(()=>!(!P.procOwn||P.status!=="running"),[g,N]);return se({page:"tree-procs",actionMaps:{help:()=>{A(!0)},"cursor-prev":()=>{if(g.length>0){let f=(N+g.length-1)%g.length;a(g[f].node.token)}},"cursor-next":()=>{if(g.length>0){let f=(N+1)%g.length;a(g[f].node.token)}},"select-script":()=>{e("select-script")},expand:()=>{P.children.length>0&&b(f=>T(h({},f),{[P.token]:!0}))},collapse:()=>{P.children.length>0&&b(f=>T(h({},f),{[P.token]:!1}))},restart:()=>{Y&&r.restartNode(P)},"restart-recrusive":()=>{r.restartAllNode(P)},kill:()=>{H&&r.killNode(P)},"kill-recrusive":()=>{r.killAllNode(P)},inspect:()=>{let f=P.token;n(f),e("inspect-proc")}},notiosConfig:t,disabled:y}),y?S.default.createElement(Le,{page:"tree-procs",actions:ue["tree-procs"],title:"Help for tree processes page",onClose:()=>A(!1)}):S.default.createElement(S.default.Fragment,null,S.default.createElement(M.Box,{flexDirection:"column",flexGrow:1},S.default.createElement(Ue,{top:B,select:N,onScrollRequest:f=>{O(f)},lines:g.map((f,E)=>S.default.createElement(M.Box,{key:f.node.token},S.default.createElement(M.Text,{wrap:"truncate"},f.indent),S.default.createElement(M.Box,{width:1},S.default.createElement(M.Text,{wrap:"truncate",color:"yellow",inverse:N===E},f.symbol)),S.default.createElement(M.Text,{wrap:"truncate",color:(()=>{var _;let V=(_=f.node.exitCode)!=null?_:0;if(f.node.status!=="finished"&&V!==0)return"magenta";if(f.node.status==="waiting")return"gray";if(f.node.status!=="running"){if(f.node.status==="killed")return"yellow";if(f.node.status==="finished")return V===0?"green":"red"}})()},f.main),S.default.createElement(M.Text,{wrap:"truncate"},f.linesStat),t.showScriptCommandInTreeProcs&&S.default.createElement(M.Box,{flexShrink:1},S.default.createElement(M.Text,{wrap:"truncate-end",color:"cyan"},f.command))))})),S.default.createElement(ye,null),S.default.createElement(M.Box,null,S.default.createElement(M.Box,{marginRight:2},S.default.createElement(M.Text,{wrap:"truncate"},"Press [?] to open help.")),S.default.createElement(M.Box,{marginRight:1},S.default.createElement(M.Text,{wrap:"truncate"},"Status:")),!H&&!Y&&S.default.createElement(M.Box,{marginRight:1},S.default.createElement(M.Text,{wrap:"truncate"},"(cannot kill or restart)")),H&&S.default.createElement(M.Box,{marginRight:1},S.default.createElement(M.Text,{wrap:"truncate"},"(can kill)")),Y&&S.default.createElement(M.Box,{marginRight:2},S.default.createElement(M.Text,{wrap:"truncate"},"(can restart)"))))},"TreeProcs"),Oo=fn;var Bo=require("ink"),Io=v(require("react"));var yn=o(({children:e})=>{let{termHeight:t}=me();return Io.default.createElement(Bo.Box,{flexDirection:"column",height:t},e)},"GlobalWrapper"),$o=yn;var gn=o(({uiOptions:e,procManager:t,notiosConfig:n,onExit:r})=>{let s={notiosConfig:n},c=go(),a=ho(),b=fo(),y=yo(),{page:A,setPage:u}=y;se({page:"common",actionMaps:{help:()=>{},exit:()=>{r==null||r()}},notiosConfig:n}),(0,X.useEffect)(()=>{t.rootNode.children.length>0&&u("tree-procs")},[t.rootNode.children.length,u]);let d=(0,X.useMemo)(()=>{switch(A){case"tree-procs":return X.default.createElement(Oo,null);case"inspect-proc":return X.default.createElement(vo,null);case"select-script":return X.default.createElement(Lo,null)}},[A]);return X.default.createElement(ut.Provider,{value:s},X.default.createElement(ft.Provider,{value:c},X.default.createElement(yt.Provider,{value:a},X.default.createElement(pt.Provider,{value:b},X.default.createElement(mt.Provider,{value:t},X.default.createElement(gt.Provider,{value:e},X.default.createElement(dt.Provider,{value:y},X.default.createElement($o,null,d))))))))},"App"),_o=gn;var Vo=o(({uiOptions:e,procManager:t,notiosConfig:n})=>{let r,s=o(()=>{!r||(r.unmount(),t.killAllNode(t.rootNode),Ge())},"onExit");r=(0,Mo.render)(Eo.default.createElement(_o,{uiOptions:e,procManager:t,notiosConfig:n.v1,onExit:s}),{exitOnCtrlC:!1})},"setupUi");Do.default.install();Ut(()=>{let e=It(),t=uo({uiOptions:e}),n=Ht({uiOptions:e,notiosConfig:t});process.once("SIGINT",()=>{n.killAllNode(n.rootNode),Ge()}),Gt({procManager:n}),mo(),Vo({procManager:n,uiOptions:e,notiosConfig:t})});
//# sourceMappingURL=data:application/json;base64,
